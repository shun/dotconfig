[[plugins]]
repo = 'Shougo/dein.vim'
rtp = ''

[[plugins]]
repo = 'Shougo/vimproc'
build = 'make'

[[plugins]]
repo = 'vim-scripts/gtags.vim'
hook_add = '''
'''

[[plugins]]
repo = 'lambdalisue/gina.vim'
hook_add = '''
'''

[[plugins]]
repo = 'dbgx/lldb.nvim'

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
'''

[[plugins]]
repo = 'Shougo/unite.vim'
hook_add = '''
imap <buffer> <C-w>      <Plug>(unite_delete_backward_path)
'''

[[plugins]]
repo = 'Shougo/vimfiler.vim'
hook_add = ''
hook_source = '''
source ~/.config/nvim/rc/rc_vimfiler.vim
'''

[[plugins]]
repo = 'Shougo/deol.nvim'
on_source = 'denite.nvim'
hook_add = '''
'''
[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
source ~/.config/nvim/rc/rc_ale.vim
'''

hook_source = '''

'''

[[plugins]]
repo = 'ozelentok/denite-gtags'

[[plugins]]
repo = 'mhinz/neovim-remote'
hook_add = '''
'''

[[plugins]]
repo = 'zchee/deoplete-clang'
on_i = 1
on_ft = [ 'c', 'cpp']

[[plugins]]
repo = 'zchee/deoplete-go'
on_i = 1
on_ft = 'go'
build = 'make'

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = 'python'

[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_i = 1

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
on_i = 1
hook_add = '''
source ~/.config/nvim/rc/rc_deoplete.vim
'''

[[plugins]]
repo = 'tpope/vim-markdown'

[[plugins]]
repo = 'othree/html5.vim'
on_ft = ['vuejs', 'js', 'javascript']

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
source ~/.config/nvim/rc/rc_lightline.vim
'''
[[plugins]]
repo = 'itchyny/vim-gitbranch'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
source ~/.config/nvim/rc/rc_quickrun.vim
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
hook_add = '''

'''

hook_post_source = '''
source ~/.config/nvim/rc/rc_denite.vim
'''

[[plugins]]
repo = 'tomasr/molokai'

# complete
#[[plugins]]
#repo = 'Shougo/neocomplete.vim'
#depends    = ['Shougo/neoinclude.vim', 'Shougo/context_filetype.vim']
#on_i = 1
#hook_add = '''
#let g:neocomplete#enable_at_startup = 1
#
#if !exists('g:neocomplete#force_omni_input_patterns')
#  let g:neocomplete#force_omni_input_patterns = {} 
#endif
#let g:neocomplete#force_overwrite_completefunc = 1
#let g:neocomplete#force_omni_input_patterns.c =
#      \ '[^.[:digit:] *\t]\%(\.\|->\)\w*'
#let g:neocomplete#force_omni_input_patterns.cpp =
#      \ '[^.[:digit:] *\t]\%(\.\|->\)\w*\|\h\w*::\w*'
#'''

#[[plugins]]
#repo = 'vim-syntastic/syntastic'
#hook_add = '''
#let g:syntastic_go_checkers = ['golint', 'gotype', 'govet', 'go']
#'''

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
source ~/.config/nvim/rc/rc_indentLine.vim
'''
# golang
[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_add = '''
'''

[[plugins]]
repo = 'kassio/neoterm'
hook_add = '''
source ~/.config/nvim/rc/rc_neoterm.vim
'''

[[plugins]]
repo = 'zchee/nvim-go'
build = 'make'

[[plugins]]
repo = 'easymotion/vim-easymotion'

[[plugins]]
repo = 'sebastianmarkow/deoplete-rust'
on_ft = 'rust'
hook_source = '''
'''

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'
hook_add = '''
let g:rustfmt_autosave = 1
'''

[[plugins]]
repo = 'aklt/plantuml-syntax'
hook_add = '''
source ~/.config/nvim/rc/rc_plantuml.vim
'''

[[plugins]]
repo = 'mhartington/nvim-typescript'
on_ft = 'typescript'

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = 'typescript'

[[plugins]]
repo = 'artur-shaik/vim-javacomplete2'
on_ft = 'java'

[[plugins]]
repo = 'kannokanno/previm'
hook_add = '''
source ~/.config/nvim/rc/rc_previm.vim
'''
on_ft = 'markdown'

[[plugins]]
repo = 'mattn/emmet-vim'
hook_add = '''
let g:user_emmet_settings = {
\    'variables' : {
\        'lang' : 'ja',
\    }
\ }
'''

[[plugins]]
repo = 'carlitux/deoplete-ternjs'
hook_add = '''
let g:user_emmet_leader_key='<C-t>'
source ~/.config/nvim/rc/rc_deoplete-ternjs.vim
'''
on_ft = ['vuejs', 'js', 'javascript']

[[plugins]]
repo = 'posva/vim-vue'

[[plugins]]
repo = 'jsfaint/gen_tags.vim'
hook_add = '''
    let g:gen_tags#gtags_auto_gen = 1
'''

